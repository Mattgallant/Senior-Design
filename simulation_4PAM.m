% The following Matlab program explores a noisy system and attempts to plot SNR vs BER. 
% A sequence of four level data (4-PAM) is generated by calling the pam.m routine. 
% Noise is then added with power specified by p (power of the noise), and the number 
% of errors caused by this amount of noise is calculated in err.
% This code derived from noisychan.m and https://www.mathworks.com/help/comm/ug/estimate-ldpc-performance-in-awgn.html

% The results of the graphs are as expected, a lower SNR (and therefor a
% higher relative noise power/presence) leads to a much high BER. This
% shows that BER is INVERSELY poportional to SNR.

m = 10000;                                      %Length of data sequence

snrVec = [0: .2: 15];                           %SNRs to try
ber = zeros(length(snrVec),1);                  %Holds BER

for k = 1:length(snrVec)
        p= 1.0/snrVec(k); s =1.0;               % power of noise and signal --> SNR = s/p. Higher signal power = lower bit error rate
        x=pam(m, 4 , s ) ;                      % 4?PAM input with power 1 . . . SEE PAM FUNCTION
        L=sqrt ( 1 / 5 ) ;                      % ...with amp levels L
        n=sqrt (p)*randn(1 ,m) ;                % noise with power p
        y=x+n ;                                 % output adds noise to data
        qy=quantalph(y,[-3*L,-L,L,3*L]) ;       % quantize to [?3*L,?L,L,3*L]   SEE QUANTALPH FUNCTION
        ber(k)=sum(abs(sign(qy'-x )))/m;        % percent transmission errors
end

%disp(ber)

%Display dB Graph
figure(1)
semilogy(snrVec,ber,'-o')
grid
title('dB Graph')
xlabel('SNR (dB)')
ylabel('Bit Error Rate')

%Display non-dB graph
figure(2)
plot(snrVec,ber,'-o')
grid
title('Standard')
xlabel('SNR')
ylabel('Bit Error Rate')